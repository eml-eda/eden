// File per salvare i dati del GBT
#ifndef __ENSEMBLE_DATA_H__
#define __ENSEMBLE_DATA_H__
// ROOTS
PI_CL_L1 node_idx_dtype ROOTS[N_TREES]={
    {{ data.roots_data }}
};

// NODES

{{ "PI_CL_L1" if (data.bits_l1_left - data.bits_nodes)>0 else "" }} struct Node NODES[N_NODES]={
    {{ data.nodes_data }}
};

// OUTPUT
PI_CL_L1 logit_dtype OUTPUT[N_CLASSES] = {0};

{% if "leaves_data" in data %}
// LEAVES (Optional, for RF - multiclass)
leaves_dtype LEAVES[N_LEAVES*N_CLASSES] ={
    {{ data.leaves_data }}
};
{% endif %}
#endif //__ENSEMBLE_DATA_H__